import { Plus, Calendar, History as HistoryIcon } from 'lucide-react';
import { Link } from 'react-router';
import { EmptyPlan } from './EmptyPlan';
import type { WeeklyPlan } from '@/types';
import { formatShortDate } from '@/lib/utils';
import { Card, CardContent, CardDescription, CardHeader, CardTitle, Loader, Button } from '@/shared/ui';

type Props = {
  isLoading: boolean;
  currentPlan: WeeklyPlan | null;
};

export const CurrentPlan = ({ currentPlan, isLoading }: Props) => {
  if (isLoading) {
    return <Loader />;
  }

  if (!currentPlan) {
    return <EmptyPlan />;
  }

  return (
    <>
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        <Card className="col-span-full">
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="text-2xl">–ü–æ—Ç–æ—á–Ω–∏–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω—É–≤–∞–Ω—å</CardTitle>

                <CardDescription className="text-base mt-1">
                  <Calendar className="inline h-4 w-4 mr-1" />
                  {formatShortDate(currentPlan.weekStartDate)} - {formatShortDate(currentPlan.weekEndDate)}
                </CardDescription>
              </div>
            </div>
          </CardHeader>

          <CardContent>
            <div className="grid gap-4 md:grid-cols-3">
              {currentPlan.days.map((day) => (
                <Link key={day.day} to={`/workout/${currentPlan.id}/${day.day}`}>
                  <Card className="hover:border-primary transition-colors cursor-pointer">
                    <CardHeader>
                      <CardTitle>–î–µ–Ω—å {day.day}</CardTitle>
                      <CardDescription>{day.exercises.length} –≤–ø—Ä–∞–≤</CardDescription>
                    </CardHeader>

                    <CardContent>
                      <div className="space-y-1">
                        {day.exercises.slice(0, 3).map((ex, idx) => (
                          <p key={idx} className="text-sm truncate">
                            {idx + 1}. {ex.name}
                          </p>
                        ))}

                        {day.exercises.length > 3 && (
                          <p className="text-xs text-muted-foreground">+{day.exercises.length - 3} —â–µ...</p>
                        )}
                      </div>
                    </CardContent>
                  </Card>
                </Link>
              ))}
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>–®–≤–∏–¥–∫—ñ –¥—ñ—ó</CardTitle>
          </CardHeader>

          <CardContent className="space-y-2">
            <Link to="/new-plan">
              <Button variant="outline" className="w-full justify-start">
                <Plus className="mr-2 h-4 w-4" />
                –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –ø–ª–∞–Ω
              </Button>
            </Link>

            <Link to="/history">
              <Button variant="outline" className="w-full justify-start">
                <HistoryIcon className="mr-2 h-4 w-4" />
                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é
              </Button>
            </Link>
          </CardContent>
        </Card>

        <Card className="md:col-span-2">
          <CardHeader>
            <CardTitle>–ü—Ä–æ –¥–æ–¥–∞—Ç–æ–∫</CardTitle>
          </CardHeader>

          <CardContent className="space-y-2 text-sm text-muted-foreground">
            <p>üìù –í—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø–ª–∞–Ω–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –≤—ñ–¥ –≤–∞—à–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞</p>
            <p>ü§ñ –û—Ç—Ä–∏–º—É–π—Ç–µ AI –ø—ñ–¥–∫–∞–∑–∫–∏ –¥–ª—è –≤–∞–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó</p>
            <p>üí™ –†–µ–¥–∞–≥—É–π—Ç–µ –≤–∞–≥—É –ø—ñ–¥ —á–∞—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è</p>
            <p>üìä –í—ñ–¥—Å—Ç–µ–∂—É–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å –∑ –≥—Ä–∞—Ñ—ñ–∫–∞–º–∏</p>
          </CardContent>
        </Card>
      </div>
    </>
  );
};
