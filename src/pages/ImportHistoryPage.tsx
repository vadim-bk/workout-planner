import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { collection, addDoc, Timestamp } from "firebase/firestore";
import { db } from "@/lib/firebase/config";
import { useAuth } from "@/contexts/AuthContext";
import { Layout } from "@/components/layout/Layout";
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Alert, AlertDescription } from "@/components/ui/alert";
import {
  parseHistoryWorkouts,
  getImportExample,
} from "@/lib/parsers/historyParser";
import {
  Upload,
  CheckCircle,
  AlertCircle,
  Info,
  ChevronLeft,
} from "lucide-react";

export function ImportHistoryPage() {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [rawText, setRawText] = useState("");
  const [isImporting, setIsImporting] = useState(false);
  const [importResult, setImportResult] = useState<{
    success: boolean;
    message: string;
    count?: number;
  } | null>(null);
  const [showExample, setShowExample] = useState(false);

  const handleImport = async () => {
    if (!rawText.trim() || !user) return;

    setIsImporting(true);
    setImportResult(null);

    try {
      // –ü–∞—Ä—Å–∏–º–æ —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
      const workouts = parseHistoryWorkouts(rawText);

      if (workouts.length === 0) {
        setImportResult({
          success: false,
          message:
            "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≤ —Ç–µ–∫—Å—Ç—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö.",
        });
        setIsImporting(false);
        return;
      }

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ–∂–Ω–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
      const historyRef = collection(db, "workout_history");
      let savedCount = 0;

      for (const workout of workouts) {
        await addDoc(historyRef, {
          userId: user.uid,
          date: Timestamp.fromDate(workout.date),
          dayNumber: workout.dayNumber,
          weekPlanId: "imported", // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —è–∫ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–µ
          exercises: workout.exercises,
          imported: true, // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –º–∞—Ä–∫–µ—Ä
        });
        savedCount++;
      }

      setImportResult({
        success: true,
        message: `‚úÖ –£—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ ${savedCount} —Ç—Ä–µ–Ω—É–≤–∞–Ω—å!`,
        count: savedCount,
      });

      // –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(() => {
        setRawText("");
      }, 2000);
    } catch (error: any) {
      console.error("Import error:", error);
      setImportResult({
        success: false,
        message: `‚ùå –ü–æ–º–∏–ª–∫–∞: ${
          error.message || "–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ"
        }`,
      });
    } finally {
      setIsImporting(false);
    }
  };

  const handleLoadExample = () => {
    setRawText(getImportExample());
    setShowExample(false);
  };

  return (
    <Layout>
      <div className="max-w-4xl mx-auto space-y-6">
        {/* Header */}
        <div className="flex items-center gap-4">
          <Button variant="outline" size="sm" onClick={() => navigate("/")}>
            <ChevronLeft className="h-4 w-4" />
          </Button>
          <div>
            <h1 className="text-3xl font-bold">–Ü–º–ø–æ—Ä—Ç —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–µ–Ω—É–≤–∞–Ω—å</h1>
            <p className="text-muted-foreground mt-1">
              –î–æ–¥–∞–π—Ç–µ –¥–∞–Ω—ñ –ø—Ä–æ –º–∏–Ω—É–ª—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –¥–ª—è –∫—Ä–∞—â–∏—Ö AI –ø—ñ–¥–∫–∞–∑–æ–∫
            </p>
          </div>
        </div>

        {/* Info Alert */}
        <Alert>
          <Info className="h-4 w-4" />
          <AlertDescription>
            <p className="font-semibold mb-2">–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î:</p>
            <ul className="list-disc list-inside space-y-1 text-sm">
              <li>
                –í—Å—Ç–∞–≤—Ç–µ –¥–∞–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 1-2 –º—ñ—Å—è—Ü—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–∏–∂—á–µ
              </li>
              <li>
                AI –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É—î –≤–∞—à—É —ñ—Å—Ç–æ—Ä—ñ—é —ñ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—î –æ–ø—Ç–∏–º–∞–ª—å–Ω—ñ –≤–∞–≥–∏ –∑
                –ø—Ä–æ–≥—Ä–µ—Å—ñ—î—é
              </li>
              <li>–ë—ñ–ª—å—à–µ –¥–∞–Ω–∏—Ö = —Ç–æ—á–Ω—ñ—à—ñ –ø—ñ–¥–∫–∞–∑–∫–∏ –¥–ª—è –Ω–æ–≤–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å</li>
              <li>
                –ú–æ–∂–Ω–∞ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤ (–¥–∞–Ω—ñ –¥–æ–¥–∞—é—Ç—å—Å—è, –Ω–µ
                –∑–∞–º—ñ–Ω—è—é—Ç—å—Å—è)
              </li>
            </ul>
          </AlertDescription>
        </Alert>

        {/* Import Result */}
        {importResult && (
          <Alert variant={importResult.success ? "success" : "destructive"}>
            {importResult.success ? (
              <CheckCircle className="h-4 w-4" />
            ) : (
              <AlertCircle className="h-4 w-4" />
            )}
            <AlertDescription>{importResult.message}</AlertDescription>
          </Alert>
        )}

        {/* Input Card */}
        <Card>
          <CardHeader>
            <CardTitle>–í—Å—Ç–∞–≤—Ç–µ –¥–∞–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å</CardTitle>
            <CardDescription>
              –§–æ—Ä–º–∞—Ç: –¥–∞—Ç–∞, –¥–µ–Ω—å, –≤–ø—Ä–∞–≤–∏ –∑ –≤–∞–≥–∞–º–∏ —Ç–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è–º–∏
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <Textarea
              value={rawText}
              onChange={(e) => setRawText(e.target.value)}
              placeholder={`–ü—Ä–∏–∫–ª–∞–¥ —Ñ–æ—Ä–º–∞—Ç—É:\n\n–¢–∏–∂–¥–µ–Ω—å: 14.10.2024 - 20.10.2024\n\n–î–µ–Ω—å 1\n1. –ü—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è –∑—ñ —à—Ç–∞–Ω–≥–æ—é\n100 –∫–≥ √ó 12 \n100 –∫–≥ √ó 10 \n\n2. –ñ–∏–º –Ω–æ–≥–∞–º–∏\n150 –∫–≥ √ó 15 \n\n–î–µ–Ω—å 2\n1. –ñ–∏–º —à—Ç–∞–Ω–≥–∏ –ª–µ–∂–∞—á–∏\n80 –∫–≥ √ó 12 \n\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥" –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É`}
              className="min-h-[400px] font-mono text-sm"
            />

            <div className="flex gap-3">
              <Button
                onClick={handleImport}
                disabled={!rawText.trim() || isImporting}
                size="lg"
                className="flex-1"
              >
                {isImporting ? (
                  <>
                    <div className="mr-2 h-4 w-4 animate-spin rounded-full border-b-2 border-white"></div>
                    –Ü–º–ø–æ—Ä—Ç...
                  </>
                ) : (
                  <>
                    <Upload className="mr-2 h-4 w-4" />
                    –Ü–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
                  </>
                )}
              </Button>

              <Button
                onClick={() => setShowExample(!showExample)}
                variant="outline"
                size="lg"
              >
                <Info className="mr-2 h-4 w-4" />
                {showExample ? "–°—Ö–æ–≤–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥" : "–ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥"}
              </Button>
            </div>

            {showExample && (
              <Card className="bg-muted">
                <CardHeader>
                  <CardTitle className="text-lg">
                    –ü—Ä–∏–∫–ª–∞–¥ —Ñ–æ—Ä–º–∞—Ç—É –¥–∞–Ω–∏—Ö
                  </CardTitle>
                  <CardDescription>
                    –ú–æ–∂–µ—Ç–µ —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ü–µ–π –ø—Ä–∏–∫–ª–∞–¥ —ñ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Å–≤–æ—ó –¥–∞–Ω—ñ
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <pre className="text-xs whitespace-pre-wrap bg-background p-4 rounded-md overflow-x-auto">
                    {getImportExample()}
                  </pre>
                  <Button
                    onClick={handleLoadExample}
                    variant="outline"
                    size="sm"
                    className="mt-3"
                  >
                    –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥ —É –ø–æ–ª–µ
                  </Button>
                </CardContent>
              </Card>
            )}
          </CardContent>
        </Card>

        {/* Format Guide */}
        <Card>
          <CardHeader>
            <CardTitle>–§–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4 text-sm">
              <div>
                <p className="font-semibold mb-1">üìÖ –¢–∏–∂–¥–µ–Ω—å:</p>
                <code className="bg-muted px-2 py-1 rounded">
                  –¢–∏–∂–¥–µ–Ω—å: –î–î.–ú–ú.–†–†–†–† - –î–î.–ú–ú.–†–†–†–†
                </code>
                <p className="text-muted-foreground mt-1">
                  –ü—Ä–∏–∫–ª–∞–¥:{" "}
                  <code className="bg-muted px-1">
                    –¢–∏–∂–¥–µ–Ω—å: 14.10.2024 - 20.10.2024
                  </code>
                </p>
              </div>

              <div>
                <p className="font-semibold mb-1">üóìÔ∏è –î–µ–Ω—å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è:</p>
                <code className="bg-muted px-2 py-1 rounded">–î–µ–Ω—å 1</code>
                <p className="text-muted-foreground mt-1">
                  –ü—Ä–æ—Å—Ç–æ –Ω–æ–º–µ—Ä –¥–Ω—è –≤ –ø—Ä–æ–≥—Ä–∞–º—ñ (1, 2, 3...)
                </p>
              </div>

              <div>
                <p className="font-semibold mb-1">üí™ –í–ø—Ä–∞–≤–∞:</p>
                <code className="bg-muted px-2 py-1 rounded">
                  1. –ù–∞–∑–≤–∞ –≤–ø—Ä–∞–≤–∏
                </code>
              </div>

              <div>
                <p className="font-semibold mb-1">üèãÔ∏è –ü—ñ–¥—Ö–æ–¥–∏ (–Ω–æ–≤–∏–π —Ñ–æ—Ä–º–∞—Ç):</p>
                <code className="bg-muted px-2 py-1 rounded block mb-1">
                  100 –∫–≥ √ó 12
                </code>
                <code className="bg-muted px-2 py-1 rounded block mb-1">
                  100 –∫–≥ √ó 10
                </code>
                <code className="bg-muted px-2 py-1 rounded block">12</code>
                <p className="text-muted-foreground mt-1">
                  –ö–æ–∂–µ–Ω –ø—ñ–¥—Ö—ñ–¥ –∑ –Ω–æ–≤–æ–≥–æ —Ä—è–¥–∫—É, –±–µ–∑ "–ü—ñ–¥—Ö—ñ–¥ 1:", "–ü—ñ–¥—Ö—ñ–¥ 2:"
                </p>
              </div>

              <div className="pt-4 border-t">
                <p className="font-semibold mb-2">üí° –ü–æ—Ä–∞–¥–∏:</p>
                <ul className="list-disc list-inside space-y-1 text-muted-foreground">
                  <li>–†–æ–∑–¥—ñ–ª—è–π—Ç–µ —Ä—ñ–∑–Ω—ñ —Ç–∏–∂–Ω—ñ –ø–æ—Ä–æ–∂–Ω—ñ–º–∏ —Ä—è–¥–∫–∞–º–∏ –∞–±–æ "---"</li>
                  <li>–ú–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ √ó –∞–±–æ x –¥–ª—è –º–Ω–æ–∂–µ–Ω–Ω—è</li>
                  <li>–ü—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å—Å—è –¥–µ—Å—è—Ç–∫–æ–≤—ñ –≤–∞–≥–∏: 52.5 –∫–≥ –∞–±–æ 52,5 –∫–≥</li>
                  <li>
                    –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 1-2 –º—ñ—Å—è—Ü—ñ –¥–ª—è –∫—Ä–∞—â–∏—Ö
                    —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
                  </li>
                  <li>
                    –ù–æ–≤–∏–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ—Å—Ç—ñ—à–∏–π - –Ω–µ —Ç—Ä–µ–±–∞ –ø–∏—Å–∞—Ç–∏ "–ü—ñ–¥—Ö—ñ–¥ 1:",
                    "–ü—ñ–¥—Ö—ñ–¥ 2:"
                  </li>
                </ul>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </Layout>
  );
}
